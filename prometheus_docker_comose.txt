version: "3.9"

networks:
  monitoring:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.201.111.0/24
          gateway: 10.201.111.1

volumes:
  prometheus_data: {}

services:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 80:9090
    restart: unless-stopped
    volumes:
      - /home/vita/prometheus/prometheus:/etc/prometheus
      - /home/vita/prometheus/prometheus_data:/prometheus
      - /home/vita/prometheus/queries.active:/prometheus/data/queries.active
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  snmp_exporter:
    image: prom/snmp-exporter
    container_name: snmp_exporter
    restart: unless-stopped
    command:
      - '--config.file=/etc/snmp_exporter/snmp.yml'
    expose:
      - 9116
    networks:
      - monitoring


Хранилище

Поступающие сэмплы группируются в блоки по 2 часа. 
Каждый такой блок состоит из директории, содержащей:
    * поддиректории chunks, в которых содержатся все все времянные ряды за это время;
    * файл метаданных;
    * файл-индексатор.
Сэмплы группируются вместе в один или несколько сегментных файлов размером до 512 МБ.
Когда ряд удаляется, удаленные записи сохраняются некоторое время в отдельном файле tombstone.


Текущий блок сэмплов находится в ОЗУ. 
От крэшей его защищает write-ahead log (WAL), который может быть воспроизведен повторно после рестарта сервера. 
WAL хранится в директории wal в виде сегментов размером до 128 МБ, которые содержат сырые некомпрессированные данные. Минимум таких сегментов 3.



Скрипты

Переменные:
$varname                            переменная
${var_name}                      переменная которую можно вставить в середину выражения??
${var_name:<format>}    супер переменная??
  
Query                    генерирует список значений на основании метрик
Custom                 значения определяются вручную через запятую
Text box                пустое текстовое поле с возможным дефолтным значением????????
Constant               скрытая константа
Data source          для быстрой смены источника для всего дэшборда
Interval                 переменная для временных интервалов
Ad hoc filters        глобальная переменная для всех запросов от определенного источника (only work with Prometheus, Loki, InfluxDB, and Elasticsearch)????
Global variables        встроенные переменные
Chained variables      ссылки в переменных на переменные

Пример:        
label_values(name)
label_values({name=~"$host", ifDescr=~"$if"}, ifAlias)



Алерты

{{ define "alert" }}
{{ if eq (.Status) "firing" }}{{if  .Labels.ifDescr }} ⚠️ {{ .Labels.alertname }} on {{ .Labels.ifDescr }} 
{{else}} ⚠️ {{ .Labels.alertname }} {{end}}
WHEN: {{ .StartsAt.Format "02.01.2006 15:04:05"  }} {{ .StartsAt.Location }}{{else }} 
{{if  .Labels.ifDescr }} ✅ {{ .Labels.alertname }} on {{ .Labels.ifDescr }}{{else}} ✅ {{ .Labels.alertname }} {{end}}
WHEN: {{ .EndsAt.Format "02.01.2006 15:04:05"  }} {{ .EndsAt.Location }} {{end}}{{ if gt (len .Annotations) 0 }}
ANNOTATION: {{ range .Annotations.SortedPairs }}
        {{ .Name }}: {{ .Value }}{{ end }}{{ end }}
LABELS: {{ range .Labels.SortedPairs }}
        {{ .Name }}: {{ .Value }}{{ end }}
{{ if gt (len .DashboardURL ) 0 }}GO TO DASHBOARD: {{ .DashboardURL }}{{ end }}
{{ end }}



{{ define "message" }}
{{ if gt (len .Alerts.Firing) 0 }}{{ len .Alerts.Firing }}  FIRING:
    {{ range .Alerts.Firing }} {{ template "alert" .}}{{ end }}{{end}}
{{ if gt (len .Alerts.Resolved) 0 }}
{{ len .Alerts.Resolved }} RESOLVED:
    {{ range .Alerts.Resolved }} {{ template "alert" .}} {{ end }}
{{ end }}{{ end }}



{{ template "message" . }}
